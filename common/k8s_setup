# KREW plugins
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
#curl https://krew.sh/df-pv | bash
# enable if needed. But it adds significant delay to new session creation
#source <(kubectl completion zsh)

#k8s aliases / functions
alias kc='kubectl'
alias k='kubectl'
alias kx='kubectx'
alias kn='kubens'
#alias kclf='kubectl logs --tail=200 -f'
alias kcgs='kubectl get service -o wide'
alias kcgd='kubectl get deployment -o wide'
alias kcgp='kubectl get pod -o wide'
alias kcgpw='watch -n 1 kubectl get pod -o wide'
alias kcgn='kubectl get node -o wide'
alias kcdf='kubectl delete -f'
alias kcaf='kubectl apply -f'
alias kcci='kubectl cluster-info'
alias kcbad='kubectl get pod | grep "0\/"'
alias kcall='kubectl get nodes --no-headers | awk '\''{print $1}'\'' | xargs -I {} sh -c '\''echo {} ; kubectl describe node {} | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- ; echo '\'''

function kdvers() {
  kc describe deployment $@ | grep "Image:" | cut -d ":" -f3
}

function kcdp() {
  kubectl describe pod $@ | less -S
}
function kcdn() {
  kubectl describe node $@ | less -S
}
function kclf() {
    container_name=`kubectl get pod $1 -ojson | jq -r '.spec.containers[].name' | grep -v "istio"`
    kubectl logs --tail=200 -f $1 -c $container_name
}
function kcdd() {
  kubectl describe deployment $@ | less -S
}
function kcds() {
  kubectl describe service $@ | less -S
}
function kcgpg() { kubectl get pod -o wide| grep $@; }
function kcgsg() { kubectl get service -o wide| grep $@; } 
function kcgdg() { kubectl get deployment -o wide | grep $@; }
function kcxsh() { 
    container_name=$(echo "$1" | awk -F'-' '{container_name=""; for (i=1; i < NF-1; i ++) {container_name=container_name"-"$i}; print container_name}' | sed 's/^-//')
    kubectl exec -ti $@ -c $container_name -- sh; 
}
function kcxbash() {
    container_name=$(echo "$1" | awk -F'-' '{container_name=""; for (i=1; i < NF-1; i ++) {container_name=container_name"-"$i}; print container_name}' | sed 's/^-//')
    kubectl exec -ti $@ -c $container_name -- bash; 
}

function kcpf() { 
  result=$(kubectl get pod | grep -m1 $1)
  exitCode=$?
  if [ ! "$exitCode" -eq 0 ]; then
    echo "Could not find pod matching [$@]."
    return 1;	
  fi
  local_port="8080"
  if [ $# -gt 1 ]; then
    local_port="$2"
  fi

  podName=$(echo $result | awk '{print $1}')
  echo "Forwarding port 8080 of $podName to local port $local_port"
  kubectl port-forward $podName $local_port:8080
}
