#!/bin/bash

lazy_load() {
    # Act as a stub to another shell function/command. When first run, it will load the actual function/command then execute it.
    # E.g. This made my zsh load 0.8 seconds faster by loading `nvm` when "nvm", "npm" or "node" is used for the first time
    # $1: space separated list of alias to release after the first load
    # $2: file to source
    # $3: name of the command to run after it's loaded
    # $4+: argv to be passed to $3
    echo "Lazy loading $1 ..."

    # $1.split(' ') using the s flag. In bash, this can be simply ($1) #http://unix.stackexchange.com/questions/28854/list-elements-with-spaces-in-zsh
    # Single line won't work: local names=("${(@s: :)${1}}"). Due to http://stackoverflow.com/questions/14917501/local-arrays-in-zsh   (zsh 5.0.8 (x86_64-apple-darwin15.0))
    local -a names
    if [[ -n "$ZSH_VERSION" ]]; then
        names=("${(@s: :)${1}}")
    else
        names=($1)
    fi
    unalias "${names[@]}"
    . $2
    shift 2
    $*
}

group_lazy_load() {
    local script
    script=$1
    shift 1
    for cmd in "$@"; do
        alias $cmd="lazy_load \"$*\" $script $cmd"
    done
}

export WORKSPACE_PATH=$HOME/data/workspace
export SOFTS_PATH=$WORKSPACE_PATH/softs
export PROJECTS_PATH=$WORKSPACE_PATH/projects

# java
#export JAVA_HOME=$SOFTS_PATH/jdk

# maven
export MAVEN_HOME=$SOFTS_PATH/apache-maven
export M2_HOME=$MAVEN_HOME
export M2=$M2_HOME$/bin
export MAVEN_OPTS="-Xms256m -Xmx512m"

# fff (fucking fast filemanager)
if [ -d $SOFTS_PATH/fff ]; then
  export PATH=${SOFTS_PATH}/fff:$PATH
fi

# include all above software into PATH
export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$PATH
export PATH=${HOME}/.local/bin:$PATH
export PATH=${HOME}/.cargo/bin:$PATH
export PATH=$SOFTS_PATH/bin:$PATH

export EDITOR="vim"

# go version manager
#[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# GO RELATED
gocode_path="$PROJECTS_PATH/00_common/gocode"
if [ -d $gocode_path ]; then
  export GOPATH="$gocode_path"
  export PATH="$GOPATH/bin:$PATH"
fi

[ -f $HOME/.k8s_setup ] && . $HOME/.k8s_setup
[ -f $HOME/.gitcfg ] && . $HOME/.gitcfg

go_v() {
  if [ $# -eq 0 ]; then
      echo "-> List of available versions"
      find "$SOFTS_PATH/lib" -maxdepth 1 -name "go*" -type d | rev | cut -d'/' -f1 | rev
      return 0
  fi
  v_path=$SOFTS_PATH/lib/$1
  if [ ! -d "$v_path" ]; then
    # TODO download it
    echo "Invalid go version $1 (search at $v_path)"
    return 1
  fi
  symlink_path=$SOFTS_PATH/lib/go
  [ -e "$symlink_path" ] && rm "$symlink_path"
  ln -s "$v_path" "$symlink_path"
  go version
}
