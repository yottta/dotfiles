export ZSH="$HOME/.oh-my-zsh"
export PATH="$PATH:/opt/local/bin:/opt/local/sbin"

### zsh & oh-my-zsh properties
# zsh
HISTSIZE=99999999
# oh-my-zsh
HIST_STAMPS="mm/dd/yyyy"
DISABLE_AUTO_TITLE="true"
# 3rd party
ZSH_AUTOSUGGEST_STRATEGY=(history)

# PROMPT settings
git_info() {
  current_branch=`git branch --show-current` 2>/dev/null
  if [ $? -ne 0 ]; then
    return
  fi
  if [ -z $current_branch ]; then
    current_branch=`git branch -a | grep "*"`
    if [[ $current_branch == *"no branch"* ]]; then
      current_branch=`echo $current_branch | cut -d',' -f2 | sed 's/)//' | xargs`
    fi
  fi
  echo "%F{magenta}[%F{red}${current_branch}%F{magenta}]$reset_color"
}

k8s_info() {
  out="%F{white}( %F{blue}\u2638%b$reset_color %F{white}| "
  which kubectx > /dev/null
  if [ $? -ne 0 ]; then
    return
  fi
  out="$out%F{cyan}`kubectx -c`"
  which kubens > /dev/null
  if [ $? -eq 0 ]; then
    out="$out:`kubens -c`"
  fi
  out="$out%F{white} )"
  echo $out"$reset_color"
}

setopt PROMPT_SUBST
NEWLINE=$'\n'
PROMPT='%F{green}%~$reset_color $(git_info) $(k8s_info) $reset_color$NEWLINE%#> '
# uncomment this for a more detailed prompt
#PROMPT='%F{5}[%F{2}%n%F{5}] %F{3}%d %{$fg_bold[blue]%}$reset_color%F{red}%*%f $(git_info) $reset_color$(k8s_info) $reset_color $NEWLINE%#> '

# plugins
# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#
# For fzf:
# git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
# ~/.fzf/install
plugins=(docker docker-compose timer fzf)

source $ZSH/oh-my-zsh.sh
source $ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
autoload -U compinit && compinit

######### keybindings #########
# go one directory back - ctrl + k
function up_widget() {
  BUFFER="cd .."
  zle accept-line
}
zle -N up_widget
bindkey "^u" up_widget

# go to home directory - ctrl + h
function goto_home() {
  BUFFER="cd ~/"$BUFFER
  zle end-of-line
  zle accept-line
}
zle -N goto_home
bindkey "^h" goto_home

# add to current BUFFER the sudo keyword
function add_sudo() {
  BUFFER="sudo "$BUFFER
  zle end-of-line
}
zle -N add_sudo
bindkey "^s" add_sudo

# personal settings - also could overwrite the PROMPT variable. Search for "PROMPT=" in your dotfiles
[ -f ~/.common_system ] && . ~/.common_system
